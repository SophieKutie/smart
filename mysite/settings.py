"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""


import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$b_54o)q*dq@89*(0=e2@j=jm2@e@(3m=2-kr#v&2oa)s&-m4!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [

    'bootstrap_datepicker_plus',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'background_task',
    'django_js_reverse',
    'smart'
    ]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
               ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# STATICFILES_FINDERS = [
#     'default': {
#         'django.contrib.staticfiles.finders.FileSystemFinder',
#         'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     }
# ]

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/London'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static"),
#
# ]


# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'test/data/user_handles')
MEDIA_URL = '/user_handles/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'test/data/abusive_terms')
MEDIA_URL = '/abusive_terms/'






#logger
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
                    'handlers': ['console'],
                    'level': 'INFO',
                },
        # application level logger here
        'smart': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    #     'console': {
    # 'class' : 'logging.StreamHandler',
    # 'formatter': 'brief',
    # 'level': 'INFO',
    # 'filters': '[allow_foo]',
    # 'stream'  : 'ext://sys.stdout'
    # },
  # 'file': {
  #   'class' : 'logging.handlers.RotatingFileHandler',
  #   'formatter': 'precise',
  #   'filename': 'logconfig.log',
  #   'maxBytes': '1024',
  #   'backupCount': '3'
  # }
        # 'default': {
        #     'level': 'DEBUG',
        #     'class': 'logging.handlers.RotatingFileHandler',
        #     'filename': 'logs/mylog.log',
        #     'maxBytes': 1024 * 1024 * 5,  # 5MB
        #     'backupCount': 5,
        #     'formatter': 'standard'
        # },
    #     'request_handler': {
    #         'level': 'DEBUG',
    #         'class': 'logging.handlers.RotatingFileHandler',
    #         'filename': 'logs/django_request.log',
    #         'maxBytes': 1024 * 1024 * 5,  # 5MB
    #         'backupCount': 5,
    #         'formatter': 'standard'
    #     },
    # },
    # 'loggers': {
    #     '': {
    #         'handlers': ['default'],
    #         'level': 'DEBUG',
    #         'propagate': True
    #     },
    #     'django.request': {
    #         'handlers': ['request_handler'],
    #         'level': 'DEBUG',
    #         'propagate': False
    #     },
# "info_handler": {
#     "class": "logging.StreamHandler",
#     "level": "INFO",
#     "formatter": "info_format",
#     "stream": "ext://sys.stdout"
# },
# "error_handler": {
#     "class": "logging.StreamHandler",
#     "level": "ERROR",
#     "formatter": "error_format",
#     "stream": "ext://sys.stderr"
# }
    }
}
# LOGFILES_DIRS = [
#     os.path.join(BASE_DIR, "debug/"),
#
# ]